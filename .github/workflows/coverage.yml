on: [push]

name: coverage

jobs:
  rust:
    name: Rust
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: install deps
      run: sudo apt-get install lcov
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        default: true
        override: true
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: coverage
      run: |
        cargo install cargo-cov
        make -C rust coverage
    - uses: actions/upload-artifact@v2
      with:
        name: rust
        path: rust/target/cov/report/
  golang:
    name: Golang
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v1
      with:
        go-version: 1.20
    - uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - run: |
        make -C go dep
        make -C go coverage
        cp go/cover.html go/index.html
    - uses: actions/upload-artifact@v2
      with:
        name: golang
        path: go/index.html
  c:
    name: C
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: install deps
      run: sudo apt-get install libcunit1-dev lcov
    - name: coverage
      run: |
        make -C c coverage-html
    - uses: actions/upload-artifact@v2
      with:
        name: c
        path: c/cover/
  cpp:
    name: C++
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: install deps
      run: sudo apt-get install libcppunit-dev libboost-dev libboost-program-options-dev lcov
    - name: coverage
      run: |
        make -C cpp coverage-html
    - uses: actions/upload-artifact@v2
      with:
        name: cpp
        path: cpp/cover/
  pages:
    if: ${{ github.ref == 'refs/heads/main' }}
    name: upload coverage data
    needs: [c, cpp, rust, golang]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        architecture: 'x64'
    - uses: actions/download-artifact@v2
      with:
        path: pages
    - name: make index page
      run: |
        pip install dirindex
        dirindex make pages --template apache
    - name: deploy to gh-pages
      uses: peaceiris/actions-gh-pages@v2
      env:
        ACTIONS_DEPLOY_KEY: ${{ secrets.ACTIONS_DEPLOY_KEY }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: ./pages
      with:
        forceOrphan: true
