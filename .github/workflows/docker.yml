name: docker image

on:
  push:
    branches: [main]

jobs:
  buildx:
    env:
      latest: c
    strategy:
      matrix:
        tags: [c, cpp, rust, go]
    runs-on: ubuntu-latest
    steps:
     - name: checkout
       uses: actions/checkout@v2
     - name: setup qemu
       uses: docker/setup-qemu-action@v1
     - name: setup docker buildx
       id: buildx
       uses: docker/setup-buildx-action@v1
     - name: login ghcr.io
       uses: docker/login-action@v1
       with:
         registry: ghcr.io
         username: ${{ github.repository_owner }}
         password: ${{ secrets.CR_PAT }}
     - name: build and push (64bit)
       uses: docker/build-push-action@v2
       if: ${{ matrix.tags == 'rust' }}
       with:
         #platforms: ${{ steps.buildx.outputs.platforms }}
         platforms: linux/amd64,linux/arm64
         push: true
         context: ${{ matrix.tags }}
         file: ${{ matrix.tags }}/Dockerfile
         tags: ghcr.io/${{ github.repository_owner }}/wait-for-it:${{ matrix.tags }}
     - name: build and push
       uses: docker/build-push-action@v2
       if: ${{ matrix.tags != 'rust' }}
       with:
         #platforms: ${{ steps.buildx.outputs.platforms }}
         platforms: linux/amd64,linux/arm64,linux/arm/v7
         push: true
         context: ${{ matrix.tags }}
         file: ${{ matrix.tags }}/Dockerfile
         tags: ghcr.io/${{ github.repository_owner }}/wait-for-it:${{ matrix.tags }}
     - name: build and push (latest)
       uses: docker/build-push-action@v2
       if: ${{ matrix.tags == env.latest }}
       with:
         #platforms: ${{ steps.buildx.outputs.platforms }}
         platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6,linux/ppc64le,linux/s390x
         push: true
         context: ${{ matrix.tags }}
         file: ${{ matrix.tags }}/Dockerfile
         tags: ghcr.io/${{ github.repository_owner }}/wait-for-it:latest
